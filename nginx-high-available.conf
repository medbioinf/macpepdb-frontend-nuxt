
# Use this to serve information which are necessary to render the frontend and are usually fast, e.g. amino acids, statistics, etc.
upstream fast_requests_handler {
    server backend_1:3001;
}

# Use this upstream to serve long running requests like searches. 
upstream slow_requests_handler {
    least_conn;
    server backend_2:3001 fail_timeout=30m max_fails=0;
    server backend_3:3001 fail_timeout=30m max_fails=0;
}

# Use to serve frontend
upstream frontend_handler {
    server frontend:3000;
}

server {
    listen 8080;
    server_name localhost;

    # Adjust handling of client body 
    client_max_body_size 500M;
    client_body_buffer_size 30M;

    # Make files sending more efficient
    sendfile on;
    tcp_nopush on;

    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods *;
    add_header Access-Control-Expose-Headers Content-Type;

    # Deliver fast requests
    location ~ ^/api(/dashboard|/proteins/amino-acids) {
        add_header Served-By "fast backend";    # Only to check if the requests is served by the correct location block during testing
        proxy_pass http://fast_requests_handler;
        # Disable buffering of upstream responses.
        proxy_buffering             off;
        # Set proxy headers for Flask
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Disable passing on to next upstreamserver
        # proxy_next_upstream off;
        # Adjust timeouts
        proxy_connect_timeout       20s;
        proxy_send_timeout          20s;
        proxy_read_timeout          20s;
        send_timeout                20s;
    }

    # Deliver slow requests content
    location ~ ^/api {
        add_header Served-By "slow backend";    # Only to check if the requests is served by the correct location block during testing
        proxy_pass http://slow_requests_handler;
        # Disable buffering of upstream responses.
        proxy_buffering             off;
        # Set proxy headers for Flask
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Disable passing on to next upstream server
        # proxy_next_upstream off;
        # Adjust timeouts
        proxy_connect_timeout       30m;
        proxy_send_timeout          30m;
        proxy_read_timeout          30m;
        send_timeout                30m;
    }

    # Deliver frontend
    location / {
        add_header Served-By "frontend";        # Only to check if the requests is served by the correct location block during testing
        proxy_pass http://frontend_handler;
        # Disable buffering of upstream responses.
        proxy_buffering             off;
        # Set proxy headers for Flask
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
